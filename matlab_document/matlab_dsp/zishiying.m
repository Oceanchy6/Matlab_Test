clear all;
% 产生理想信号
n = 0:511%抽样点数为512
f1=0.1;
f2=0.3;
N = 30; %定义滤波器的阶数为30
w = zeros(N,512);%将滤波器的初始值设置为0
en = zeros(512,1);%将初始误差设置为0
xN=zeros(N,512);%xN为理想信号的N为列向量，信号共512个点迭代参数n取值可以达到512，即为N*512阶矩阵
%迭代更新滤波器的参数

xn= 10*10*sin(2*pi*f1*n+pi/3)+2*sin(2*pi*f2*n+pi/4);;%xn为f1=0.1，f2=0.3正弦信号叠加
xs = randn(1,512);%产生一个1×512大小的噪声信号，幅度为[0,1]
%产生输入信号
fn = xs+xn;%xs+xn得到输入信号fn
fn = fn';%将输入信号由行向量转置为列向量
dn = xn';%将理想信号由行向量转置为列向量
R=fn*fn';
fe = max(eig(R));%求解输入fn的自相关矩阵的最大特征值fe
u = 1/(2*fe);%u<1/Rmax即可,R为自相关矩阵特征值
%引用LMS算法实现滤波
for k = 30:512    %要保证输入延时后的信号有效，所以实际的迭代次数只有（482）次，
   %将输入信号延迟，使得滤波器的每个抽头都有输入
    for i=1:30
        xN(i,k)=fn(k+1-i);
    end
    y = w(:,k-1).'*xN(:,k);  %计算出滤波器的输出
    en(k) = dn(k)-y;   %得出误差信号，dn为理想信号转置即为xn‘
    w(:,k) = w(:,k-1)+u*en(k)*xN(:,k);%迭代更新滤波器的系数
end
%滤波器参数固定后，得出经过优化滤波器滤波后的输出信号
for k = 30:512
    %将输入信号延迟，使得滤波器的每个抽头都有输入
    for i=1:30
        xN(i,k)=fn(k+1-i);
    end
    yn(k) = w(:,k).'*xN(:,k);%求输出信号yn
end
    

figure(1);
subplot(2,1,1);
grid;%显示窗格
plot(n,xn);
title("理想信号");
subplot(2,1,2);
grid;%显示窗格
plot(xs);
title("随机噪声");
figure(2);
subplot(2,1,1);
grid;
plot(fn);%绘制输入滤波器信号
title('输入滤波器的信号');
subplot(2,1,2);
grid;
plot(yn);%绘制经过滤波器滤波后信号
title('滤波后的信号');
figure(3);
grid;
plot(n,xn,'red',n,yn,'blue',n,en,'yellow');%绘制输入信号，输出信号，误差信号
legend('滤波器的输入信号','滤波器的输出信号','误差信号');
title('三种信号的比较');